问题1:请问.vue文件中的style标签的样式的生效流程?
解答:
	前言:
		1.浏览器不认得vue文件,所以该类文件上线之前一定会经过编译,变成html+css+js
		2.webpack具有打包编译代码的能力,webpack其实只认得js和json
			扩展:webpack只认识js和json,但是他有很多好兄弟loader,它可以帮助webpack解析他不认识的文件类型

	1.首先webpack会使用vue-loader去解析vue文件,其中就会遇到style标签

	2.webpack发现style标签中使用的是sass语法,由于他不认得sass语法,所以需要请出兄弟sass-loader帮助其编译该代码
		效果:sass代码->css代码

	3.webpack发现了css代码,但是他还是不认得,所以有需要请出兄弟css-loader帮助其编译css代码
		效果:css代码->js代码

	4.现在webpack已经获取到了js版本的样式代码,但是页面不认识,所以需要将这段字符串让页面认识
		请出最后的帮手style-loader
		效果:将字符串放入style标签中,最终将style标签插入到页面的head标签中

	注意:每个组件在挂载的时候,会将自己的样式通过style标签插入到页面上,实现效果,但是组件卸载的时候,该样式的style不会删除,会产生遗留效果
		很有可能对其他模块的代码产生影响


问题2:请问如何控制样式,不让某个模块的样式影响到其他模块?
解答:给style标签添加上scoped属性,就可以实现样式作用域的效果
	也就是说,没有写scoped属性,就代表这个样式可以在所有组件生效

	扩展:一个组件可以拥有多个style标签,可以部分具有scoped属性,部分不具有

问题3:请问scoped属性中的样式的效果范围?
解答:能实现的效果范围是当前组件内部以及子组件的根元素身上

问题4:scoped属性是如何做到约束样式的效果范围的?
解答:
	1.在组件创建的时候,给当前组件生成一个唯一的hash值(类似身份证号)
		给当前组件中所有的标签添加上该hash值,作为标签属性

	2.给写在scoped属性中的样式添加上属性选择器,(如果具有该属性的标签才能生效样式)
		属性选择器会添加在最内层的选择器上

	注意:子组件的根标签上也会被打上hash值的标签属性,所以样式才能生效

问题5:请问如何将一个样式实现作用域穿透效果?
	也就是让本属于当前组件的样式,影响到其余的组件(例如UI库组件)
解答:
	使用样式的深度选择器即可实现

	语法   :deep(选择器){里面写样式}
	效果:	其实就是将原本添加给最内层的属性选择器,添加给了父级了,那么这时候,只要是当前组件中的后代标签,无论是自己的还是后代组件的都能生效






