1.用户在login页面可以输入帐号密码,最终点击登录按钮,执行点击事件的回调函数

2.回调函数中,会调用userInfo的store仓库内部的action方法发送请求,实现登录效果
	效果是将用户的账号密码兑换成token字符串
	注意:需要修改action->login,将假登录改为真登录

3.登录成功之后,控制用户进行路由跳转,目的地是首页

4.由于项目出现了路由跳转操作,所以会触发之前写好的路由守卫
	文件路径:/src/permission.ts

5.在导航守卫的回调函数中,获取userInfo仓库中的token信息
	如果有token
		如果是想要跳转login
			控制用户跳转到首页,不让他去login

		如果不是想要跳转login
			判断是否具有用户信息
				如果有
					想去哪就去哪
				如果没有
					就调用action发送请求,通过给请求头中添加token属性,来与服务器兑换用户的相关信息
					兑换成功之后,放行
					注意:
						1.需要修改action->getInfo,将他改为真正能兑换用户信息的接口
						2.需要修改state数据的ts接口约束
	如果没有token
		判断当前路径是否在白名单中
			如果在
				就放行,让他跳转
			如果不在
				就让他跳转到登录界面